% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/binning.R
\name{binning}
\alias{bam2binned}
\alias{bed2binned}
\alias{binning}
\title{Convert aligned reads from various file formats into read counts in equidistant bins}
\usage{
bam2binned(bamfile, bamindex = bamfile, ID = basename(bamfile),
  pairedEndReads = FALSE, outputfolder.binned = "binned_data",
  binsizes = NULL, reads.per.bin = NULL, stepsize = NULL,
  chromosomes = NULL, save.as.RData = FALSE, calc.complexity = TRUE,
  min.mapq = 10, remove.duplicate.reads = TRUE, reads.store = FALSE,
  outputfolder.reads = "data", reads.return = FALSE,
  reads.overwrite = FALSE, reads.only = FALSE)

bed2binned(bedfile, chrom.length.file, ID = basename(bedfile),
  outputfolder.binned = "binned_data", binsizes = NULL,
  reads.per.bin = NULL, stepsize = NULL, chromosomes = NULL,
  save.as.RData = FALSE, calc.complexity = TRUE, min.mapq = 10,
  remove.duplicate.reads = TRUE, reads.store = FALSE,
  outputfolder.reads = "data", reads.return = FALSE,
  reads.overwrite = FALSE, reads.only = FALSE)
}
\arguments{
\item{bamfile}{A file in BAM format.}

\item{bamindex}{BAM index file. Can be specified without the .bai ending. If the index file does not exist it will be created and a warning is issued.}

\item{ID}{An identifier that will be used to identify the file throughout the workflow and in plotting.}

\item{pairedEndReads}{Set to \code{TRUE} if you have paired-end reads in your file.}

\item{outputfolder.binned}{Folder to which the binned data will be saved. If the specified folder does not exist, it will be created.}

\item{binsizes}{An integer vector with bin sizes. If more than one value is given, output files will be produced for each bin size.}

\item{reads.per.bin}{Approximate number of desired reads per bin. The bin size will be selected accordingly. Output files are produced for each value.}

\item{stepsize}{Fraction of the binsize that the sliding window is offset at each step. Example: If \code{stepsize=0.1} and \code{binsizes=c(200000,500000)}, the actual stepsize in basepairs is 20000 and 50000, respectively.}

\item{chromosomes}{If only a subset of the chromosomes should be binned, specify them here.}

\item{save.as.RData}{If set to \code{FALSE}, no output file will be written. Instead, a \link{GenomicRanges} object containing the binned data will be returned. Only the first binsize will be processed in this case.}

\item{calc.complexity}{A logical indicating whether or not to estimate library complexity.}

\item{min.mapq}{Minimum mapping quality when importing from BAM files.}

\item{remove.duplicate.reads}{A logical indicating whether or not duplicate reads should be removed.}

\item{reads.store}{If \code{TRUE} processed read fragments will be saved to file. Reads are processed according to \code{min.mapq} and \code{remove.duplicate.reads}. Paired end reads are coerced to single end fragments.}

\item{outputfolder.reads}{Folder to which the read fragments will be saved. If the specified folder does not exist, it will be created.}

\item{reads.return}{If \code{TRUE} no binning is done and instead, read fragments from the input file are returned in \code{\link{GRanges}} format.}

\item{reads.overwrite}{Whether or not an existing file with read fragments should be overwritten.}

\item{reads.only}{If \code{TRUE} only read fragments are stored and/or returned and no binning is done.}

\item{bedfile}{A file in BED format.}

\item{chrom.length.file}{A file which contains the chromosome lengths in basepairs. The first column contains the chromosome name and the second column the length (see also \code{\link{chrom.length.file}}.}
}
\description{
Convert aligned reads in .bam or .bed format into read counts in equidistant windows.
}
\details{
Convert aligned reads or signal values from various file formats into read counts in equidistant windows (bins). bam2binned() and bed2binned() use 'GenomicRanges::countOverlaps()' to calculate the read counts. Therefore, with small binsizes and large read lengths, one read fragment will often overlap more than one bin.
}
\section{Functions}{
\itemize{
\item \code{bam2binned}: Bin reads in BAM format

\item \code{bed2binned}: Bin reads in BED format
}}
\examples{
## Get an example BAM file with single-cell-sequencing reads
bamfile <- system.file("extdata/BB140820_I_002.bam", package="aneufinder")
## Bin the BAM file into bin size 200000bp
binned.data <- bam2binned(bamfile, binsize=200000, chromosomes=c(1:22,'X','Y'), save.as.RData=FALSE)
}
\author{
Aaron Taudt
}

