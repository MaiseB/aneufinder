% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/binning.R
\name{align2binned}
\alias{align2binned}
\title{Convert aligned reads from various file formats into read counts in equidistant bins}
\usage{
align2binned(file, format, ID = basename(file), bamindex = file,
  pairedEndReads = FALSE, chrom.length.file, outputfolder = "binned_data",
  binsizes = 2e+05, reads.per.bin = NULL, numbins = NULL,
  chromosomes = NULL, save.as.RData = FALSE, calc.complexity = TRUE,
  min.mapq = 10, remove.duplicate.reads = TRUE, call = match.call(),
  return.fragments = FALSE)
}
\arguments{
\item{file}{A file with aligned reads.}

\item{format}{One of \code{c('bam', 'bed', 'bedGraph')}.}

\item{ID}{An identifier that will be used to identify the file throughout the workflow and in plotting.}

\item{bamindex}{Index file if \code{format='bam'} with or without the .bai ending. If this file does not exist it will be created and a warning is issued.}

\item{pairedEndReads}{Set to \code{TRUE} if you have paired-end reads in your file.}

\item{chrom.length.file}{A file which contains the chromosome lengths in basepairs. The first column contains the chromosome name and the second column the length (see also \code{\link{chrom.length.file}}.}

\item{outputfolder}{Folder to which the binned data will be saved. If the specified folder does not exist, it will be created.}

\item{binsizes}{An integer vector with bin sizes. If more than one value is given, output files will be produced for each bin size.}

\item{reads.per.bin}{Approximate number of desired reads per bin. The bin size will be selected accordingly. Output files are produced for each value.}

\item{numbins}{Number of bins per chromosome. Each chromosome will have a different binsize! DO NOT USE UNLESS YOU KNOW WHAT YOU ARE DOING. Output files are produced for each value.}

\item{chromosomes}{If only a subset of the chromosomes should be binned, specify them here.}

\item{save.as.RData}{If set to \code{FALSE}, no output file will be written. Instead, a \link{GenomicRanges} object containing the binned data will be returned. Only the first binsize will be processed in this case.}

\item{calc.complexity}{A logical indicating whether or not to estimate library complexity.}

\item{min.mapq}{Minimum mapping quality when importing from BAM files.}

\item{remove.duplicate.reads}{A logical indicating whether or not duplicate reads should be removed.}

\item{call}{The \code{match.call()} of the parent function.}

\item{return.fragments}{If \code{TRUE} no binning is done and instead, read fragments from the input file are returned in \code{\link{GRanges}} format.}
}
\value{
The function produces a \link{GRanges} object with one meta data column 'reads' that contains the read count. This binned data will be either written to file (\code{save.as.RData=FALSE}) or given as return value (\code{save.as.RData=FALSE}).
}
\description{
Convert aligned reads in .bam or .bed format into read counts in equidistant windows. Convert signal values in .bedGraph format to signal counts in equidistant windows.
}

