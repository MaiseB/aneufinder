% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qualityMeasures.R
\name{clusterByQuality}
\alias{clusterByQuality}
\title{Cluster based on quality variables}
\usage{
clusterByQuality(hmms, G = 1:9, itmax = c(100, 100),
  measures = c("spikiness", "entropy", "num.segments", "bhattacharyya",
  "complexity", "sos"), orderBy = "spikiness", reverseOrder = FALSE)
}
\arguments{
\item{hmms}{A list of \code{\link{aneuHMM}} objects or a character vector with files that contain such objects.}

\item{G}{An integer vector specifying the number of clusters that are compared. See \code{\link[mclust:Mclust]{Mclust}} for details.}

\item{itmax}{The maximum number of outer and inner iterations for the \code{\link[mclust:Mclust]{Mclust}} function. See \code{\link[mclust:emControl]{emControl}} for details.}

\item{measures}{The quality measures that are used for the clustering. Supported is any combination of \code{c('spikiness','entropy','num.segments','bhattacharyya','loglik','complexity','sos','avg.read.count','total.read.count','avg.binsize')}.}

\item{orderBy}{The quality measure to order the clusters by. Default is \code{'spikiness'}.}

\item{reverseOrder}{Logical indicating whether the ordering by \code{orderBy} is reversed.}
}
\value{
A \code{list} with the classification, parameters and the \code{\link[mclust]{Mclust}} fit.
}
\description{
This function uses the \pkg{\link{mclust}} package to cluster the input samples based on various quality measures.
}
\details{
Please see \code{\link{getQC}} for a brief description of the quality measures.
}
\examples{
## Get a list of HMMs
folder <- system.file("extdata", "primary-lung", "hmms", package="AneuFinderData")
files <- list.files(folder, full.names=TRUE)
cl <- clusterByQuality(files)
## Plot the clustering and print the parameters
plot(cl$Mclust, what='classification')
print(cl$parameters)
## Select files from the best 2 clusters for further processing
best.files <- unlist(cl$classification[1:2])

}
\seealso{
\code{\link{getQC}}
}
\author{
Aaron Taudt
}
